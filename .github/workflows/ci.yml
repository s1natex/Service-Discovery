name: CI-CD

on:
  push:
    branches:
      - '**'
    paths:
      - "frontend/**"
      - "gateway/**"
      - "service/**"
      - "healthz/**"
      - "tests/**"
      - "docker-compose.ci.yml"
      - ".github/workflows/ci.yml"

env:
  DOCKERHUB_REPO: s1natex/service-discovery
  FRONTEND_SVC: frontend
  GATEWAY_SVC: gateway
  SERVICE_SVC: service
  HEALTHZ_SVC: healthz

jobs:
  test-frontend:
    name: Frontend Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install deps
        working-directory: frontend
        run: |
          if [ -f package-lock.json ]; then npm ci; else npm i; fi

      - name: Run tests
        working-directory: frontend
        run: npm run test

  test-python:
    name: Python Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install -U pip
          pip install pytest pytest-cov flask requests

      - name: Run tests
        run: pytest -q

  build-and-push:
    name: Build and Push Images
    runs-on: ubuntu-latest
    needs: [test-frontend, test-python]
    outputs:
      release_tag: ${{ steps.meta.outputs.release_tag }}
      frontend_image: ${{ steps.meta.outputs.frontend_image }}
      gateway_image:  ${{ steps.meta.outputs.gateway_image }}
      service_image:  ${{ steps.meta.outputs.service_image }}
      healthz_image:  ${{ steps.meta.outputs.healthz_image }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Compute release tag (name-yyyymmdd-sha)
        id: meta
        run: |
          set -euo pipefail
          DATE=$(date -u +%Y%m%d)
          SHORT_SHA=${GITHUB_SHA::7}
          RELEASE_TAG="${DATE}-${SHORT_SHA}"
          echo "release_tag=${RELEASE_TAG}" >> "$GITHUB_OUTPUT"

          FRONTEND_IMAGE="${DOCKERHUB_REPO}:${FRONTEND_SVC}-${RELEASE_TAG}"
          GATEWAY_IMAGE="${DOCKERHUB_REPO}:${GATEWAY_SVC}-${RELEASE_TAG}"
          SERVICE_IMAGE="${DOCKERHUB_REPO}:${SERVICE_SVC}-${RELEASE_TAG}"
          HEALTHZ_IMAGE="${DOCKERHUB_REPO}:${HEALTHZ_SVC}-${RELEASE_TAG}"

          echo "frontend_image=${FRONTEND_IMAGE}" >> "$GITHUB_OUTPUT"
          echo "gateway_image=${GATEWAY_IMAGE}"   >> "$GITHUB_OUTPUT"
          echo "service_image=${SERVICE_IMAGE}"   >> "$GITHUB_OUTPUT"
          echo "healthz_image=${HEALTHZ_IMAGE}"   >> "$GITHUB_OUTPUT"

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Sanity check Dockerfiles
        run: |
          set -euo pipefail
          for d in frontend gateway service healthz; do
            echo "== $d =="
            ls -la "$d"
            test -f "$d/Dockerfile" || (echo "Missing $d/Dockerfile"; exit 1)
            head -n 5 "$d/Dockerfile" || true
          done

      - name: Build images
        env:
          FRONTEND_IMAGE: ${{ steps.meta.outputs.frontend_image }}
          GATEWAY_IMAGE:  ${{ steps.meta.outputs.gateway_image }}
          SERVICE_IMAGE:  ${{ steps.meta.outputs.service_image }}
          HEALTHZ_IMAGE:  ${{ steps.meta.outputs.healthz_image }}
        run: |
          set -euo pipefail
          docker build -f frontend/Dockerfile -t "$FRONTEND_IMAGE" frontend
          docker build -f gateway/Dockerfile  -t "$GATEWAY_IMAGE"  gateway
          docker build -f service/Dockerfile  -t "$SERVICE_IMAGE"  service
          docker build -f healthz/Dockerfile  -t "$HEALTHZ_IMAGE"  healthz

      - name: Push images
        env:
          FRONTEND_IMAGE: ${{ steps.meta.outputs.frontend_image }}
          GATEWAY_IMAGE:  ${{ steps.meta.outputs.gateway_image }}
          SERVICE_IMAGE:  ${{ steps.meta.outputs.service_image }}
          HEALTHZ_IMAGE:  ${{ steps.meta.outputs.healthz_image }}
        run: |
          set -euo pipefail
          docker push "$FRONTEND_IMAGE"
          docker push "$GATEWAY_IMAGE"
          docker push "$SERVICE_IMAGE"
          docker push "$HEALTHZ_IMAGE"

  update-manifests:
    name: Update K8s Manifests
    runs-on: ubuntu-latest
    needs: build-and-push
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Update image tags (name-yyyymmdd-sha)
        env:
          DOCKERHUB_REPO: ${{ env.DOCKERHUB_REPO }}
          RELEASE_TAG:    ${{ needs.build-and-push.outputs.release_tag }}
        run: |
          set -euo pipefail
          sed -i "s#${DOCKERHUB_REPO}:frontend-[^[:space:]]\\+#${DOCKERHUB_REPO}:frontend-${RELEASE_TAG}#g" frontend.yaml || true
          sed -i "s#${DOCKERHUB_REPO}:gateway-[^[:space:]]\\+#${DOCKERHUB_REPO}:gateway-${RELEASE_TAG}#g"  gateway.yaml  || true
          sed -i "s#${DOCKERHUB_REPO}:healthz-[^[:space:]]\\+#${DOCKERHUB_REPO}:healthz-${RELEASE_TAG}#g"  healthz.yaml  || true
          sed -i "s#${DOCKERHUB_REPO}:service-[^[:space:]]\\+#${DOCKERHUB_REPO}:service-${RELEASE_TAG}#g"  service-a.yaml || true
          sed -i "s#${DOCKERHUB_REPO}:service-[^[:space:]]\\+#${DOCKERHUB_REPO}:service-${RELEASE_TAG}#g"  service-b.yaml || true
          sed -i "s#${DOCKERHUB_REPO}:service-[^[:space:]]\\+#${DOCKERHUB_REPO}:service-${RELEASE_TAG}#g"  service-c.yaml || true
          sed -i "s#${DOCKERHUB_REPO}:service-[^[:space:]]\\+#${DOCKERHUB_REPO}:service-${RELEASE_TAG}#g"  service-d.yaml || true
          git status --porcelain

      - name: Commit manifest changes [skip-ci]
        run: |
          set -euo pipefail
          if ! git diff --quiet; then
            git config user.name  "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add frontend.yaml gateway.yaml healthz.yaml service-a.yaml service-b.yaml service-c.yaml service-d.yaml
            git commit -m "[skip-ci] Update image tags to ${RELEASE_TAG}"
            git push
          else
            echo "No manifest changes to commit."
          fi
